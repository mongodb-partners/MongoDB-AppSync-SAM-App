AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Metadata:
  AWS::ServerlessRepo::Application:
    Name: MongoDB-AppSync-App
    Description: >
      This project helps you query your MongoDB Atlas cluster using a managed GraphQL API offered by AppSync
    Author: "Anuj Panchal"
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['MongoDB', 'AppSync', 'GraphQL', 'AWS']
    HomePageUrl: https://github.com/mongodb-partners/MongoDB-AppSync-SAM-App
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/mongodb-partners/MongoDB-AppSync-SAM-App

Parameters:
  AtlasConnectionString:
    Type: String
    Description: "MongoDB Atlas connection string to be passed during deployment"
    NoEcho: true
  Database:
    Type: String
    Description: "Name of the Database"
    NoEcho: true
  Collection:
    Type: String
    Description: "Name of the Collection"
    NoEcho: true

Resources:
  MyLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda_function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 30
      Environment:
        Variables:
          ATLAS_CONNECTION_STRING: !Ref AtlasConnectionString
          DATABASE: !Ref Database
          COLLECTION: !Ref Collection
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Role: !GetAtt LambdaExecutionRole.Arn

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action: 
                  - secretsmanager:GetSecretValue
                Resource: "*"

# Outputs:
#   LambdaFunction:
#     Description: "URL of the API Gateway"
#     Value: !Sub "https://${MyHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
#     Export:
#       Name: LambdaFunction
